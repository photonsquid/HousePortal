name: Deploy

on:
  push:
    branches:
      - main  # Push to main branch
      - ci-cd/*

jobs:
  test:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v1
      - name: "Set up node"
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: "Run tests"
        run: |
          rm -rf node_modules && yarn install --frozen-lockfile
          yarn run build --if-present
          yarn test

  publish:
    runs-on: "ubuntu-latest"
    needs: test
    if: "contains(github.event.head_commit.message, 'deploy') || contains(github.event.head_commit.message, 'Deploy')"

    steps:
      - uses: actions/checkout@v1
      - name: "Set up node"
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install Node.js and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - uses: actions/cache@v1
        id: npm-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies from cache
        run: |
          yarn install --prefer-offline
          
      - name: Install dependencies from repository
        run: |
          yarn

      - name: Build images
        run: |
          docker build -t ghcr.io/photonsquid/houseportal .

      - name: Login to GitHub Packages
        env:
          TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          echo ${{ env.TOKEN }} | docker login ghcr.io -u photonsquid --password-stdin

      - name: Push to GitHub Packages
        run: |
          tag=$(git rev-parse --short HEAD)
          docker tag ghcr.io/photonsquid/houseportal ghcr.io/photonsquid/houseportal:$tag
          docker push ghcr.io/photonsquid/houseportal:$tag
      
      - name: Logout
        run: |
          docker logout
    
  release:
    runs-on: "ubuntu-latest"
    needs: deploy
        
    steps:
      - name: Create Draft Release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}